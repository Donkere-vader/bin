#!/bin/python3

import os
import shutil
import argparse

parser = argparse.ArgumentParser(
    "Find and remove",
    description="Find and remove files or folders and then remove them"
)
parser.add_argument(
    "file_name",
    type=str,
    help="The file or folder you're trying to delete"
)
parser.add_argument(
    "-y", "--yes",
    default=False,
    const=True,
    action="store_const",
    help="Don't prompt for yes just do it"
)
program_args = parser.parse_args()


locations: list = []

def search(path, name):
    files = os.listdir("/" + "/".join(path))

    for file in files:
        file_loc = "/" + "/".join(path) + "/" + file

        if name == file:
            locations.append(file_loc)
        elif os.path.isdir(file_loc):
            search([item for item in file_loc.split("/") if len(item) > 0], name)


search([item for item in os.getcwd().split("/") if len(item) > 0], program_args.file_name)


size = 0

for file in locations:
    size += os.path.getsize(file)

size_labels = ["B", "KB", "MB", "GB", "TB", "PB"]
size_label_pointer = 0
while size / 1024 > 1:
    size = size / 1024
    size_label_pointer += 1
size_label = size_labels[size_label_pointer]


print(f"Found {len(locations)} items of '{program_args.file_name}'")

for file in locations:
    print(f"    {file}")

if not program_args.yes:
    if input(f"Free up {size} {size_label} of space [Y/n]? ").lower() not in ["", "y"]:
        exit()
else:
    print(f"Freeing up {size} {size_label} of space")


while len(locations) > 0:
    file = locations.pop(0)
    print(f"Removing: {file}...", end="")

    if os.path.isdir(file):
        shutil.rmtree(file)
    else:
        os.remove(file)

    print("succes")
